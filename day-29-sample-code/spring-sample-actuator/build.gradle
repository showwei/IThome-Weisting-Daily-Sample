buildscript {
    ext {
        springBootVersion = '2.5.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'idv.project.java'
version '1.0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    //runtime
    implementation ('org.springframework.boot:spring-boot-starter')
    implementation ('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-jetty')
    compile('org.springframework.boot:spring-boot-starter-aop')
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
    compile('com.google.guava:guava:20.0')
    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')
    compile('org.springframework.security:spring-security-messaging')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.3.5.RELEASE'
    compile('org.springframework.boot:spring-boot-starter-actuator:2.5.1')
    compile('de.codecentric:spring-boot-admin-starter-client:2.4.1')
    compile('de.codecentric:spring-boot-admin-starter-server:2.3.1')
    compile('org.springframework.boot:spring-boot-starter-web:2.5.1')

    // test
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '1.0.0'
    testCompile group: 'org.springframework', name: 'spring-test'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

def seaFoodSpringProfile = System.getProperty("profile") ?: "dev"

println('Build Sea Food System PROFILE : ' + seaFoodSpringProfile)

bootRun {
    systemProperty 'spring.profiles.active', "${seaFoodSpringProfile}"
}

processResources {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
            springProfile: seaFoodSpringProfile
    ]
}
